/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author abdur
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.util.Locale;
public class kasir extends javax.swing.JFrame {
private DefaultTableModel modelTransaksi;

    /**
     * Creates new form kasir
     */
    public kasir() {
        initComponents();
        initTableModel();
    }
 private void initTableModel() {
        modelTransaksi = new DefaultTableModel(
            new String[]{"ID Transaksi", "Nomor Meja", "ID Masakan", "Tanggal", "Nama Masakan", "Harga Satuan", "Jumlah Beli", "Total Bayar"}, 0
        );
        jTable1.setModel(modelTransaksi);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        jLabel1.setText("MENU KASIR");

        jLabel3.setText("MEJA PELANGGAN");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id_transaksi", "nomor_meja", "id masakan", "tanggal", "nama masakan", "harga satuan", "jumlah beli", "total bayar"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("TAMPILKAN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("YANG DI BAYARKAN");

        jLabel4.setText("KEMBALIAN");

        jTextField1.setText("5");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton2.setText("BAYAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("SELESAI");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("KELUAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                            .addComponent(jTextField3))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton3))))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton3))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String namaPelanggan = jTextField1.getText().trim();
    
    // Reset tabel
    modelTransaksi.setRowCount(0);

    try (Connection conn = KONEKSI.getConnection()) {
        String sql = "SELECT " +
                     "id_transaksi, " +
                     "nama_pelanggan, " +
                     "id_masakan, " +
                     "tanggal, " +
                     "nama_masakan, " +
                     "harga, " +
                     "jumlah_beli, " +
                     "total_bayar " +
                     "FROM transaksi " +
                     "WHERE nama_pelanggan = ?";
        
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, namaPelanggan);
        ResultSet rs = pst.executeQuery();

        int totalKeseluruhan = 0;
        while (rs.next()) {
            Object[] row = {
                rs.getInt("id_transaksi"),
                rs.getString("nama_pelanggan"),
                rs.getInt("id_masakan"),
                rs.getDate("tanggal"),
                rs.getString("nama_masakan"),
                rs.getInt("harga"),
                rs.getInt("jumlah_beli"),
                rs.getInt("total_bayar")
            };
            modelTransaksi.addRow(row);
            
            // Hitung total bayar keseluruhan
            totalKeseluruhan += rs.getInt("total_bayar");
        }

        // Tambahkan baris total
        Object[] totalRow = {"TOTAL", "", "", "", "", "", "", totalKeseluruhan};
        modelTransaksi.addRow(totalRow);

        // Tampilkan dialog total jika perlu
        JOptionPane.showMessageDialog(this, 
            "Total Pembayaran: Rp " + formatRupiah(totalKeseluruhan), 
            "Total Bayar", 
            JOptionPane.INFORMATION_MESSAGE);

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, 
            "Gagal menampilkan data: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
        // Ambil total bayar dari tabel
        int totalBayar = 0;
        
        // Cek apakah tabel memiliki data
        if (jTable1.getRowCount() > 0) {
            // Cari total bayar di kolom terakhir
            for (int i = 0; i < jTable1.getRowCount(); i++) {
    Object value = jTable1.getValueAt(i, 0); // kolom ID Transaksi
    if (value != null && !value.toString().equalsIgnoreCase("TOTAL")) {
        totalBayar += Integer.parseInt(jTable1.getValueAt(i, 7).toString());
    }

            }
        } else {
            JOptionPane.showMessageDialog(this, 
                "Tidak ada transaksi yang dipilih!", 
                "Peringatan", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Ambil jumlah yang dibayarkan
        int jumlahDibayar = Integer.parseInt(jTextField2.getText());

        // Hitung kembalian
        int kembalian = jumlahDibayar - totalBayar;

        // Validasi pembayaran
        if (kembalian < 0) {
            JOptionPane.showMessageDialog(this, 
                "Uang pembayaran kurang!", 
                "Peringatan", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Tampilkan kembalian di text field
        jTextField3.setText(String.valueOf(kembalian));

        // Optional: Tampilkan total bayar untuk konfirmasi
        JOptionPane.showMessageDialog(this, 
            "Total Bayar: " + totalBayar + "\n" +
            "Dibayar: " + jumlahDibayar + "\n" +
            "Kembalian: " + kembalian, 
            "Konfirmasi Pembayaran", 
            JOptionPane.INFORMATION_MESSAGE);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, 
            "Masukkan nominal pembayaran dengan benar!", 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Terjadi kesalahan: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         // Validasi pembayaran
    if (jTextField1.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, 
            "Pilih pelanggan terlebih dahulu!", 
            "Peringatan", 
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Validasi apakah sudah dibayar
    if (jTextField2.getText().isEmpty() || jTextField3.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, 
            "Lakukan pembayaran terlebih dahulu!", 
            "Peringatan", 
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Konfirmasi penyelesaian transaksi
    int konfirmasi = JOptionPane.showConfirmDialog(this, 
        "Selesaikan transaksi?", 
        "Konfirmasi", 
        JOptionPane.YES_NO_OPTION);

    if (konfirmasi == JOptionPane.YES_OPTION) {
        try {

            String nomorMeja = jTextField1.getText().trim();

try (Connection conn = KONEKSI.getConnection()) {
    String sql = "DELETE FROM transaksi WHERE nama_pelanggan = ?";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setString(1, nomorMeja);
    int rowsDeleted = pst.executeUpdate();

    if (rowsDeleted > 0) {
        JOptionPane.showMessageDialog(this,
            "Transaksi telah diselesaikan dan data dihapus!",
            "Sukses",
            JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this,
            "Tidak ada data yang dihapus dari database.",
            "Informasi",
            JOptionPane.INFORMATION_MESSAGE);
    }

    // Reset tabel dan field
    modelTransaksi.setRowCount(0);
    jTextField1.setText("");
    jTextField2.setText("");
    jTextField3.setText("");

} catch (SQLException e) {
    JOptionPane.showMessageDialog(this,
        "Gagal menghapus transaksi: " + e.getMessage(),
        "Error",
        JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}


            // Reset total bayar
            JOptionPane.showMessageDialog(this, 
                "Transaksi selesai!", 
                "Sukses", 
                JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Gagal menyelesaikan transaksi: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
        
        // Membuka kembali form login
        new LOGIN().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed
private String formatRupiah(int nominal) {
    NumberFormat formatRupiah = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
    return formatRupiah.format(nominal).replace("Rp", "").trim();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
