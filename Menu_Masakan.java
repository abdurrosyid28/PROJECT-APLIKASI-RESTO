/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Rivaldi
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
public class Menu_Masakan extends javax.swing.JFrame {

    /**
     * Creates new form Menu_Masakan
     */
    public Menu_Masakan() {
        initComponents();
        loadData();
    }
    private void loadData() {
    try {
        // Pastikan nama tabel dan model benar
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        
        // Buat koneksi
        Connection conn = KONEKSI.getConnection();
        
        // Query SELECT standar
        String sql = "SELECT * FROM masakan";
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        
        // Tambahkan baris dari database ke tabel
        while (rs.next()) {
            Object[] data = {
                rs.getInt("id_masakan"),         // ID
                rs.getString("nama_masakan"),    // Nama Makanan
                rs.getDouble("harga"),           // Harga
                rs.getString("status")           // Status
            };
            
            model.addRow(data);
        }
        
        // Tutup koneksi
        rs.close();
        st.close();
        conn.close();
        
    } catch (SQLException e) {
        // Tampilkan pesan error lengkap
        JOptionPane.showMessageDialog(null, 
            "Gagal Tampil Data: " + e.getMessage());
        e.printStackTrace();
    } catch (Exception e) {
        // Tangani error umum
        JOptionPane.showMessageDialog(null, 
            "Error: " + e.getMessage());
        e.printStackTrace();
    }
}
    private void bersihkanForm() {
    text_nama_masakan.setText("");
    text_harga_masakan.setText("");
    combo_status_masakan.setSelectedIndex(0);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        text_nama_masakan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        text_harga_masakan = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        combo_status_masakan = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INPUT MAKANAN");

        jLabel5.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel5.setText("Nama Makanan");

        text_nama_masakan.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        text_nama_masakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nama_masakanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel6.setText("Harga");

        text_harga_masakan.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        text_harga_masakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_harga_masakanActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel7.setText("Stok Tersisa");

        combo_status_masakan.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        combo_status_masakan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tersedia", "Habis" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("INPUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID MASAKAN", "NAMA MASAKAN", "HARGA", "STOK"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton4.setText("KELUAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(44, 44, 44)
                        .addComponent(combo_status_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(text_harga_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jButton4)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(text_nama_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(text_nama_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_harga_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combo_status_masakan, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_nama_masakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nama_masakanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_nama_masakanActionPerformed

    private void text_harga_masakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_harga_masakanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_harga_masakanActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
    Connection conn = KONEKSI.getConnection();
    String sql = "INSERT INTO masakan (nama_masakan, harga, status) VALUES (?, ?, ?)";
    PreparedStatement pst = conn.prepareStatement(sql);
    
    // Validasi input
    if (text_nama_masakan.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Nama Masakan tidak boleh kosong");
        return;
    }
    
    if (text_harga_masakan.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Harga tidak boleh kosong");
        return;
    }
    
    pst.setString(1, text_nama_masakan.getText());
    pst.setDouble(2, Double.parseDouble(text_harga_masakan.getText()));
    pst.setString(3, combo_status_masakan.getSelectedItem().toString());
    
    pst.executeUpdate();
    
    JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
    loadData();
    bersihkanForm();
    
    pst.close();
    conn.close();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error Database: " + e.getMessage());
    e.printStackTrace();
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Harga harus berupa angka");
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    e.printStackTrace();
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         try {
        // Cek apakah baris sudah dipilih
        int row = jTable2.getSelectedRow(); // Pastikan nama tabel benar
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan diupdate");
            return;
        }
        
        // Validasi input
        if (text_nama_masakan.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama masakan tidak boleh kosong");
            return;
        }
        
        if (text_harga_masakan.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harga tidak boleh kosong");
            return;
        }
        
        // Parsing ID dari baris yang dipilih
        // Pastikan kolom ID ada di kolom pertama (index 0)
        int id = Integer.parseInt(jTable2.getValueAt(row, 0).toString());
        
        // Buat koneksi
        Connection conn = KONEKSI.getConnection(); // Pastikan nama class koneksi benar
        
        // Query UPDATE
        String sql = "UPDATE masakan SET nama_masakan=?, harga=?, status=? WHERE id_masakan=?";
        PreparedStatement pst = conn.prepareStatement(sql);
        
        // Set parameter
        pst.setString(1, text_nama_masakan.getText());
        
        // Validasi dan parsing harga
        double harga;
        try {
            harga = Double.parseDouble(text_harga_masakan.getText());
            if (harga <= 0) {
                JOptionPane.showMessageDialog(null, "Harga harus lebih dari 0");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Harga harus angka");
            return;
        }
        
        pst.setDouble(2, harga);
        pst.setString(3, combo_status_masakan.getSelectedItem().toString()); // Pastikan nama combo box benar
        pst.setInt(4, id);
        
        // Eksekusi update
        pst.executeUpdate();
        
        // Tampilkan pesan berhasil
        JOptionPane.showMessageDialog(null, "Data Berhasil Diupdate");
        
        // Refresh tabel
        loadData();
        
        // Bersihkan form
        bersihkanForm();
        
        // Tutup statement dan koneksi
        pst.close();
        conn.close();
        
    } catch (SQLException e) {
        // Tangani error database
        JOptionPane.showMessageDialog(null, "Gagal Update: " + e.getMessage());
    } catch (Exception e) {
        // Tangani error umum
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try {
        // Cek apakah baris sudah dipilih
        int row = jTable2.getSelectedRow(); // Pastikan nama tabel benar
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan dihapus");
            return;
        }
        
        // Konfirmasi penghapusan
        int konfirmasi = JOptionPane.showConfirmDialog(null, 
            "Apakah Anda yakin ingin menghapus data ini?", 
            "Konfirmasi Hapus", 
            JOptionPane.YES_NO_OPTION);
        
        if (konfirmasi != JOptionPane.YES_OPTION) {
            return; // Batalkan jika tidak memilih Yes
        }
        
        // Parsing ID dari baris yang dipilih
        // Pastikan kolom ID ada di kolom pertama (index 0)
        int id = Integer.parseInt(jTable2.getValueAt(row, 0).toString());
        
        // Buat koneksi
        Connection conn = KONEKSI.getConnection(); // Pastikan nama class koneksi benar
        
        // Query DELETE
        String sql = "DELETE FROM masakan WHERE id_masakan = ?";
        PreparedStatement pst = conn.prepareStatement(sql);
        
        // Set parameter
        pst.setInt(1, id);
        
        // Eksekusi delete
        int hapus = pst.executeUpdate();
        
        if (hapus > 0) {
            // Tampilkan pesan berhasil
            JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");           
        } else {
            JOptionPane.showMessageDialog(null, "Tidak ada data yang dihapus");
        }
        
        // Tutup statement dan koneksi
        pst.close();
        conn.close();
        loadData();
        bersihkanForm();
    } catch (SQLException e) {
        // Tangani error database
        JOptionPane.showMessageDialog(null, "Gagal Hapus: " + e.getMessage());
    } catch (Exception e) {
        // Tangani error umum
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
       try {
        // Pastikan nama tabel dan model benar
        int row = jTable2.getSelectedRow();
        
        // Pastikan nama komponen sesuai dengan form Anda
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        
        // Cek apakah baris valid
        if (row >= 0 && row < model.getRowCount()) {
            // Set text field dengan data dari baris yang dipilih
            // Pastikan urutan kolom benar
            text_nama_masakan.setText(model.getValueAt(row, 1).toString());
            text_harga_masakan.setText(model.getValueAt(row, 2).toString());
            
            // Set combo box status
            combo_status_masakan.setSelectedItem(model.getValueAt(row, 3).toString());
        }
    } catch (Exception e) {
        // Tangani error
        JOptionPane.showMessageDialog(null, "Gagal memilih data: " + e.getMessage());
    }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // Menutup form saat ini
        dispose();
        
        // Membuka kembali form login
        new LOGIN().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Masakan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Masakan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_status_masakan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField text_harga_masakan;
    private javax.swing.JTextField text_nama_masakan;
    // End of variables declaration//GEN-END:variables
}
